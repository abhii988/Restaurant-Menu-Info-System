import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author abhi
 */
public class MenuInfo extends javax.swing.JFrame {
    int arraysize=0;
    int[] getPrice = new int[0];
    ArrayList<Integer> priceArray=new ArrayList<>();
    ArrayList<String> typeArray=new ArrayList<>();
    ArrayList<String> availableDish=new ArrayList<>();
    /**
     * Creates new form menuIS
     */
    //
    public MenuInfo() {
        initComponents();
        loadData();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        txtSearchPrice = new javax.swing.JTextField();
        cbAvailableItem = new javax.swing.JComboBox<>();
        btnItemTypeAvailable = new javax.swing.JButton();
        lblSearchPrice = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblDishNum = new javax.swing.JLabel();
        txtDishNum = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        txtDishName = new javax.swing.JTextField();
        lblDishName = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        lblType = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        lblDietPreference = new javax.swing.JLabel();
        veg = new javax.swing.JRadioButton();
        drink = new javax.swing.JRadioButton();
        nonVeg = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuDetailsTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemOpen = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();
        menuItemHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Restaurant Menu Info System");
        setBackground(new java.awt.Color(204, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        btnSearch.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setFocusable(false);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearchPrice.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtSearchPrice.setToolTipText("");
        txtSearchPrice.setName(""); // NOI18N
        txtSearchPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchPriceActionPerformed(evt);
            }
        });
        txtSearchPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchPriceKeyTyped(evt);
            }
        });

        cbAvailableItem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Appetizers", "Meals", "Mains", "Drinks" }));
        cbAvailableItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAvailableItemActionPerformed(evt);
            }
        });

        btnItemTypeAvailable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search icon.jpg"))); // NOI18N
        btnItemTypeAvailable.setText("Item Type Available");
        btnItemTypeAvailable.setActionCommand("");
        btnItemTypeAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemTypeAvailableActionPerformed(evt);
            }
        });

        lblSearchPrice.setText("Price:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(cbAvailableItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnItemTypeAvailable)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 308, Short.MAX_VALUE)
                .addComponent(lblSearchPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearchPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtSearchPrice)
                .addComponent(lblSearchPrice))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnItemTypeAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbAvailableItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSearch)))
        );

        txtSearchPrice.getAccessibleContext().setAccessibleName("");

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Insert Data"));

        lblDishNum.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        lblDishNum.setText("Dish Number:");

        txtDishNum.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtDishNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDishNumActionPerformed(evt);
            }
        });
        txtDishNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDishNumKeyTyped(evt);
            }
        });

        txtDishName.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtDishName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDishNameActionPerformed(evt);
            }
        });
        txtDishName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDishNameKeyTyped(evt);
            }
        });

        lblDishName.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        lblDishName.setText("Dish Name:");

        lblType.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        lblType.setText("Type:");

        cbType.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        cbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type", "Appetizers", "Meals", "Mains", "Drinks" }));
        cbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTypeActionPerformed(evt);
            }
        });

        lblDietPreference.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        lblDietPreference.setText("Diet Preference:");

        buttonGroup1.add(veg);
        veg.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        veg.setText("Veg");
        veg.setToolTipText("");
        veg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vegActionPerformed(evt);
            }
        });

        buttonGroup1.add(drink);
        drink.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        drink.setText("Drink");
        drink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drinkActionPerformed(evt);
            }
        });

        buttonGroup1.add(nonVeg);
        nonVeg.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        nonVeg.setText("Non-Veg");
        nonVeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nonVegActionPerformed(evt);
            }
        });

        lblPrice.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        lblPrice.setText("Price:");

        txtPrice.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPriceKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        jLabel1.setText("Options:");

        btnInsert.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/insert icon.jpg"))); // NOI18N
        btnInsert.setText("Insert Into Table");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear icon.jpg"))); // NOI18N
        btnClear.setText("Clear Details");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("SansSerif", 0, 15)); // NOI18N
        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit icon.jpg"))); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/img1.gif"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator7)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblDishNum, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDishNum, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblDishName, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDishName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblDietPreference)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(veg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nonVeg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(drink))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDishNum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDishNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDishName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDishName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDietPreference, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(veg)
                    .addComponent(nonVeg)
                    .addComponent(drink))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnClear))
                .addGap(2, 2, 2)
                .addComponent(btnExit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jScrollPane1.setBackground(new java.awt.Color(204, 255, 204));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Menu Details"))))));

        menuDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Dish Number", "Dish Name", "Type", "Diet Preference", "Price"
            }
        ));
        jScrollPane1.setViewportView(menuDetailsTable);
        if (menuDetailsTable.getColumnModel().getColumnCount() > 0) {
            menuDetailsTable.getColumnModel().getColumn(0).setMinWidth(86);
            menuDetailsTable.getColumnModel().getColumn(0).setMaxWidth(86);
            menuDetailsTable.getColumnModel().getColumn(2).setMinWidth(85);
            menuDetailsTable.getColumnModel().getColumn(2).setMaxWidth(85);
            menuDetailsTable.getColumnModel().getColumn(3).setMinWidth(99);
            menuDetailsTable.getColumnModel().getColumn(3).setMaxWidth(99);
            menuDetailsTable.getColumnModel().getColumn(4).setMinWidth(60);
            menuDetailsTable.getColumnModel().getColumn(4).setMaxWidth(60);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 334, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(102, 153, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel4.setText("MENU");

        jLabel5.setText("Dish Name");

        jLabel3.setText("Diet Preference");

        jLabel6.setText("Price");

        jLabel7.setText("Mo:Mo");

        jLabel8.setText("Spaghetti");

        jLabel9.setText("Sandwhich");

        jLabel10.setText("Fried Rice");

        jLabel11.setText("Tea, Coffee, Mojito, Soda");

        jLabel12.setText("Pizza");

        jLabel13.setText("Burger");

        jLabel14.setText("Chowmein");

        jLabel15.setText("Veg/Non-Veg");

        jLabel16.setText("Veg/Non-Veg");

        jLabel17.setText("Veg/Non-Veg");

        jLabel18.setText("Veg/Non-Veg");

        jLabel19.setText("Drink");

        jLabel20.setText("Veg/Non-Veg");

        jLabel21.setText("Veg/Non-Veg");

        jLabel22.setText("Veg/Non-Veg");

        jLabel23.setText("110/150");

        jLabel24.setText("160/200");

        jLabel25.setText("60/90");

        jLabel26.setText("90/110");

        jLabel27.setText("30/50/80/50");

        jLabel28.setText("130/160");

        jLabel29.setText("100/140");

        jLabel30.setText("70/95");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel5)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel9)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jLabel4)
                                .addContainerGap())
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel15)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel19))
                                            .addComponent(jLabel18)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(62, 62, 62)
                                        .addComponent(jLabel3)))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                        .addComponent(jLabel30)
                                                        .addGap(7, 7, 7)))
                                                .addGap(41, 41, 41))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel27)
                                                .addGap(23, 23, 23))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(48, 48, 48))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(55, 55, 55))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel25)
                                                .addGap(52, 52, 52))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel23)
                                                    .addComponent(jLabel24))
                                                .addGap(43, 43, 43))))))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel23)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel16)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17)
                            .addComponent(jLabel25))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel19)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel20)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel21)
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel22)
                            .addComponent(jLabel30))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel26)
                        .addGap(128, 128, 128))))
        );

        menuFile.setText("File");

        menuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuItemOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open icon.jpg"))); // NOI18N
        menuItemOpen.setText("Open");
        menuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOpenActionPerformed(evt);
            }
        });
        menuFile.add(menuItemOpen);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit icon.jpg"))); // NOI18N
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuFile.add(jMenuItem1);

        jMenuBar1.add(menuFile);

        menuHelp.setText("Help");

        menuItemHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menuItemHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help icon.jpg"))); // NOI18N
        menuItemHelp.setText("User Help");
        menuItemHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemHelpActionPerformed(evt);
            }
        });
        menuHelp.add(menuItemHelp);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void openData() {
        URL filePath = MenuInfo.class.getResource("CSVFiles/open.csv"); //getting url of csv file to load from package CourseWork
        try {
            File file = new File(filePath.toURI());
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel model = (DefaultTableModel) menuDetailsTable.getModel();
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++){
                String[] row = tableLines[i].toString().split(",");
                //model.insertRow(i, row);
                int rowCount = menuDetailsTable.getRowCount();
                int colCount = menuDetailsTable.getColumnCount();
                boolean insert = false;
                int counterRow = 0;
                while (insert == false)
                {
                    int counterCol = 0;
                    boolean emptyRow = true;
                    while ( emptyRow == true && counterCol < colCount )
                    {
                        //System.out.println("CHECKING ROW: " + counterRow + ", CHECKING COLUMN " + counterCol);
                        Object cellValue = menuDetailsTable.getValueAt(counterRow, counterCol);
                        //System.out.println("VALUE: "+cellValue);
                        if ( cellValue == null )
                        {
                            counterCol++;
                        }else
                        {
                            //System.out.println("value is found, skip row");
                            break; // the row is not empty, jump to nextRow
                        }
                    }
                    if (emptyRow= true && counterCol == colCount)
                    {
                       //row is empty 
                       //System.out.println("Row is empty ");
                       insert = true;
                    }
                    else
                    {
                        counterRow++;
                    }
                }
                if (insert==true)
                {
                    int count = 0;
                    for (Object datum : row)
                    {
                        menuDetailsTable.setValueAt(datum, counterRow, count);
                        count++;
                    }
                }
            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(this,"File not found.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void loadData() {
        URL filePath = MenuInfo.class.getResource("CSVFiles/load.csv"); //getting url of csv file to load from the package
        try {
            File file = new File(filePath.toURI());
            BufferedReader br = new BufferedReader(new FileReader(file));
            DefaultTableModel model = (DefaultTableModel) menuDetailsTable.getModel();
            Object[] tableLines = br.lines().toArray();
            for(int i = 0; i < tableLines.length; i++){
                String[] row = tableLines[i].toString().split(",");
                //model.insertRow(i, row);
                int rowCount = menuDetailsTable.getRowCount();
                int colCount = menuDetailsTable.getColumnCount();
                boolean insert = false;
                int counterRow = 0;
                while (insert == false) {
                    int counterCol = 0;
                    boolean emptyRow = true;
                    while ( emptyRow == true && counterCol < colCount ) {
                        //System.out.println("CHECKING ROW: " + counterRow + ", CHECKING COLUMN " + counterCol);
                        Object cellValue = menuDetailsTable.getValueAt(counterRow, counterCol);
                        //System.out.println("VALUE: "+cellValue);
                        if ( cellValue == null ) {
                            counterCol++;
                        }
                        else {
                            //System.out.println("value is found, skip row");
                            break; // the row is not empty, jump to nextRow
                        }
                    }
                    if (emptyRow= true && counterCol == colCount) {
                       //row is empty 
                       //System.out.println("Row is empty ");
                       insert = true;
                    }
                    else {
                        counterRow++;
                    }
                }
                if (insert==true) {
                    int count = 0;
                    for (Object datum : row) {
                        menuDetailsTable.setValueAt(datum, counterRow, count);
                        count++;
                    }
                }
                else {
                    model.addRow(row);
                }
            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(this,"File not found.","Error",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        sort();
        if(txtSearchPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(this,"Please enter a price to search.","Error",JOptionPane.ERROR_MESSAGE);
        }
        else {
            int key = Integer.parseInt(txtSearchPrice.getText());
            int low =0;
            int high = arraysize-1;
            int found = searchList(low,high,key);
            if (found == -1) {
                JOptionPane.showMessageDialog(this, "The searched dish is not found!","Alert",JOptionPane.WARNING_MESSAGE);
            }
            else {   
                String tosearch=txtSearchPrice.getText();
                for (int i=0; i<menuDetailsTable.getRowCount();i++) {
                    String foundval=menuDetailsTable.getValueAt(i,4).toString();
                    if(foundval.equals(tosearch)) {
                        JOptionPane.showMessageDialog(this,
                                "The Item that you searched for has the Number: "+menuDetailsTable.getValueAt(i,0).toString()+".\n"+
                                "Name: "+menuDetailsTable.getValueAt(i,3).toString()+" "+menuDetailsTable.getValueAt(i,1).toString()+
                                ", a Type of "+menuDetailsTable.getValueAt(i,2).toString()+
                                ", having the price of "+menuDetailsTable.getValueAt(i,4).toString()+".",
                                "Info",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed
    public void sort() {
        int a =0;
        int temp =0;
        for (int i=0; i<menuDetailsTable.getRowCount(); i++) {
            String s = (String)menuDetailsTable.getValueAt(a,4);
            a++;
            if(s!=null && s.length()!=0 ) {
                arraysize++;
            }
        }      
        getPrice = new int[arraysize];
        int i=0;
        a=0;
        do {
            String s1 = (String)menuDetailsTable.getValueAt(a,4);
            if(s1!=null && s1.length()!=0 ) {
                getPrice[i]=Integer.parseInt(s1);
                i++;
            }
            a++;
        }
        while(a<menuDetailsTable.getRowCount());
        SelectionSorter.sort(getPrice);
    }
    public int searchList(int low, int high, int key) {
        if (low<=high) {
            int mid =(low+high)/2;
            if (getPrice[mid]==key) {
                return getPrice[mid];
                }
            else if(getPrice[mid]>key) {
                return searchList(low,mid-1,key) ;
                }
            else if(getPrice[mid]<key) {
                return searchList(mid+1,high,key);
                }
        }
        return -1;
    }

    private void txtSearchPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchPriceActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        String DishNumber=txtDishNum.getText();
        String DishName=txtDishName.getText();
        String Price=txtPrice.getText();
        String DishType=cbType.getSelectedItem().toString();
        int value= cbType.getSelectedIndex();
        if("[a-z]".equals(DishNumber) || "".equals(DishNumber))JOptionPane.showMessageDialog(this,"Please enter Dish Number.","Invalid Input",JOptionPane.ERROR_MESSAGE);
        else if("".equals(DishName))JOptionPane.showMessageDialog(this,"Please enter Dish Name.","Invalid Input",JOptionPane.ERROR_MESSAGE);
        else if(value==0) JOptionPane.showMessageDialog(this,"Please select Dish Type.","Invalid Input",JOptionPane.ERROR_MESSAGE);
        else if(buttonGroup1.getSelection()==null) JOptionPane.showMessageDialog(this,"Please select the Diet Preference.","Invalid Input",JOptionPane.ERROR_MESSAGE);
        else if("".equals(Price)) JOptionPane.showMessageDialog(this,"Please Enter Dish Price.","Invalid Input",JOptionPane.ERROR_MESSAGE);
        else{
            String Diet="";
            if(veg.isSelected()){
                Diet=veg.getText();
            }
            else if(nonVeg.isSelected()){
                Diet=nonVeg.getText();
            }
            else if(drink.isSelected()){
                Diet=drink.getText();
            }
            int insertPrice = Integer.parseInt(Price);
            priceArray.add(insertPrice);
            typeArray.add(DishType);
            try{
                String[] dishDetails={DishNumber,DishName,DishType,Diet,Price};
                int rowCount=menuDetailsTable.getRowCount();
                int columnCount=menuDetailsTable.getColumnCount();
                int nextRow=0;
                boolean emptyRowFlag = false;
                String s;
                do{                                
                    s=(String)menuDetailsTable.getValueAt(nextRow,0);
                    if(s !=null && s.length() !=0)nextRow++;
                    else emptyRowFlag = true;
                    txtDishNum.setText("");
                    txtDishName.setText("");
                    txtPrice.setText("");
                    buttonGroup1.clearSelection();
                    cbType.setSelectedIndex(0);
                }
                while (nextRow < rowCount && !emptyRowFlag);     
                    for (int i=0; i<columnCount; i++){
                        menuDetailsTable.setValueAt(dishDetails[i],nextRow,i);
                    }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(this,"Your Table has limited rows to save data.","Alert",JOptionPane.WARNING_MESSAGE);
            }
        }//GEN-LAST:event_btnInsertActionPerformed
    }
    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtDishNum.setText("");
        txtDishName.setText("");
        txtPrice.setText("");
        buttonGroup1.clearSelection();
        cbType.setSelectedIndex(0);
    }//GEN-LAST:event_btnClearActionPerformed
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed
    private void btnItemTypeAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemTypeAvailableActionPerformed
        availableItem();
    }//GEN-LAST:event_btnItemTypeAvailableActionPerformed
    private void availableItem(){
        String type=cbAvailableItem.getSelectedItem().toString();
        int rowCount = menuDetailsTable.getRowCount();
        for (int i=0; i<rowCount;i++){
            String s= menuDetailsTable.getValueAt(i,2).toString();
            if (type.equals(s)){            
                String a= menuDetailsTable.getValueAt(i,1).toString();
                String b= menuDetailsTable.getValueAt(i,3).toString();
                JOptionPane.showMessageDialog(this,
                        "The availabe item of this type is "+b+" "+a+".",
                        "Info",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }
    private void cbAvailableItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAvailableItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAvailableItemActionPerformed

    private void txtSearchPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchPriceKeyTyped
        // TODO add your handling code here:
                  char sf= evt.getKeyChar();
        if(!(Character.isDigit(sf) || (sf==KeyEvent.VK_BACK_SPACE) || sf==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtSearchPriceKeyTyped

    private void menuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOpenActionPerformed
        openData();
    }//GEN-LAST:event_menuItemOpenActionPerformed

    private void txtPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyTyped
        // TODO add your handling code here:
        char dishP= evt.getKeyChar();
        if(!(Character.isDigit(dishP) || (dishP==KeyEvent.VK_BACK_SPACE) || dishP==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtPriceKeyTyped

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void cbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTypeActionPerformed

    private void txtDishNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDishNameKeyTyped
        // TODO add your handling code here:
        char dishN= evt.getKeyChar();
        if((Character.isDigit(dishN) || (dishN==KeyEvent.VK_BACK_SPACE) || dishN==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtDishNameKeyTyped

    private void txtDishNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDishNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDishNameActionPerformed

    private void txtDishNumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDishNumKeyTyped
        // TODO add your handling code here:
        char dn= evt.getKeyChar();
        if(!(Character.isDigit(dn) || (dn==KeyEvent.VK_BACK_SPACE) || dn==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtDishNumKeyTyped

    private void txtDishNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDishNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDishNumActionPerformed

    private void nonVegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nonVegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nonVegActionPerformed

    private void drinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drinkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drinkActionPerformed

    private void vegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vegActionPerformed

    private void menuItemHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemHelpActionPerformed
        try{
            File helpfile = new File ("src\\help.pdf");
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+ helpfile);
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(this,"File not found."+e,"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menuItemHelpActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuInfo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnItemTypeAvailable;
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbAvailableItem;
    private javax.swing.JComboBox<String> cbType;
    private javax.swing.JRadioButton drink;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JLabel lblDietPreference;
    private javax.swing.JLabel lblDishName;
    private javax.swing.JLabel lblDishNum;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblSearchPrice;
    private javax.swing.JLabel lblType;
    private javax.swing.JTable menuDetailsTable;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenuItem menuItemHelp;
    private javax.swing.JMenuItem menuItemOpen;
    private javax.swing.JRadioButton nonVeg;
    private javax.swing.JTextField txtDishName;
    private javax.swing.JTextField txtDishNum;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSearchPrice;
    private javax.swing.JRadioButton veg;
    // End of variables declaration//GEN-END:variables


}
